{"version":3,"file":"static/js/767.111a9c50.chunk.js","mappings":"iSAyBA,MAAMA,EAAO,CACXC,WAAY,CAAC,CAAEC,KAAM,GAAIC,KAAM,GAAIC,KAAM,GAAIC,KAAM,KACnDC,eAAgB,GAChBC,eAAgB,GAChBC,kBAAmB,KAGf,eACJC,EAAc,kBACdC,EAAiB,2BACjBC,EAA0B,yBAC1BC,EAAwB,uBACxBC,GACEC,CAAAA,eAAAA,aAAAA,kBAAAA,UAAAA,2BAAAA,eAAAA,yBAAAA,4BAqEJ,EAnEYC,KACV,MAAMC,GAAkBC,EAAAA,EAAAA,GAAc,gCAChCC,GAAQC,EAAAA,EAAAA,UACZ,KAAMC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAS,CAAEL,sBAC7B,CAACA,IAaH,OAVAM,EAAAA,EAAAA,YAAU,KACKC,WACX,MAAMC,EAAWC,aAAaC,QAAQ,uBACtCC,QAAQC,IAAI,OAAQJ,GACpB,MAAMK,EAAUC,KAAKC,MAAMP,GAC3BG,QAAQC,IAAI,UAAWC,EAAQ,EAEjCG,EAAM,GACL,KAGDC,EAAAA,EAAAA,MAACC,EAAAA,cAAa,CAAChB,MAAOA,EAAMiB,SAAA,EAC1BF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAA,GAAAG,OAAW5B,EAAiB,sBAC5B2B,EAAAA,EAAAA,KAAA,QAAME,IAAI,OAAOC,KAAK,YAAYpC,KAAMK,EAAgBgC,MAAM,cAEhEJ,EAAAA,EAAAA,KAACK,EAAAA,GAAa,CAACC,QAASA,EAAAA,EAAQR,UAC9BE,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CACfC,OACEZ,EAAAA,EAAAA,MAACa,EAAAA,SAAQ,CAAAX,SAAA,EACPE,EAAAA,EAAAA,KAACU,EAAAA,eAAc,CAAAZ,UACbE,EAAAA,EAAAA,KAACW,EAAAA,OAAM,CACLC,IAAG,GAAAX,OAAK3B,GACRuC,IAAKC,EAAAA,EACLC,MAAO,CAAEC,aAAc,WAG3BhB,EAAAA,EAAAA,KAACiB,EAAAA,aAAY,CAACC,QAAO,GAAAjB,OAAK3B,QAG9B6C,KAAMxD,EAAKmC,UAEXF,EAAAA,EAAAA,MAACwB,EAAAA,GAAM,CAAAtB,SAAA,EACLE,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAI,mBAAAtB,OAAqB1B,GACzBiD,UAAWC,EAAAA,KAEbzB,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAI,mBAAAtB,OAAqB1B,EAAwB,qBACjDiD,UAAWC,EAAAA,KAEbzB,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAI,uCAAAtB,OAAyC1B,EAAwB,qBACrEiD,UAAWC,EAAAA,KAEbzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CACPC,KAAK,IACLC,GAAE,mBAAA3B,OAAqB1B,GACvBiD,UAAWC,EAAAA,aAKL,C","sources":["App.js"],"sourcesContent":["import React, { Component, useState, useEffect, useMemo } from 'react';\nimport Helmet from 'react-helmet';\nimport {\n  Router,\n  Switch,\n  Route,\n  Redirect,\n  BrowserRouter,\n} from 'react-router-dom';\nimport './App.css';\nimport history from './history';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport AppContainerElem from './Components/AppContainerElem';\nimport {\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n} from '@material-ui/core';\nimport Cfroides from './Views/Cfroides';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport LogoApp from './logo.svg';\nimport GetTheme from './theme';\n\nconst Menu = {\n  MenuNavBar: [{ text: '', link: '', href: '', icon: '' }],\n  MenuSideBarSup: [],\n  MenuSideBarInf: [],\n  MenuSideBarNotion: [],\n};\n\nconst {\n  REACT_APP_LOGO,\n  REACT_APP_COMPANY,\n  REACT_APP_APPLICATION_NAME,\n  REACT_APP_APPLICATION_ID,\n  REACT_APP_PLATFORM_URL,\n} = process.env;\n\nconst App = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = useMemo(\n    () => createTheme(GetTheme({ prefersDarkMode })),\n    [prefersDarkMode],\n  );\n\n  useEffect(() => {\n    const init = async () => {\n      const userInfo = localStorage.getItem('TowersServices_user');\n      console.log('user', userInfo);\n      const newUser = JSON.parse(userInfo);\n      console.log('newUser', newUser);\n    };\n    init();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Helmet>\n        <title>{`${REACT_APP_COMPANY} | Applications`}</title>\n        <link rel=\"icon\" type=\"image/png\" href={REACT_APP_LOGO} sizes=\"16x16\" />\n      </Helmet>\n      <BrowserRouter history={history}>\n        <AppContainerElem\n          title={\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar\n                  alt={`${REACT_APP_APPLICATION_NAME}`}\n                  src={LogoApp}\n                  style={{ borderRadius: '0%' }}\n                />\n              </ListItemAvatar>\n              <ListItemText primary={`${REACT_APP_APPLICATION_NAME}`} />\n            </ListItem>\n          }\n          menu={Menu}\n        >\n          <Switch>\n            <Route\n              exact\n              path={`/applications/ID${REACT_APP_APPLICATION_ID}`}\n              component={Cfroides}\n            />\n            <Route\n              exact\n              path={`/applications/ID${REACT_APP_APPLICATION_ID}/models/:modelId?`}\n              component={Cfroides}\n            />\n            <Route\n              exact\n              path={`/projects/:projectId/applications/ID${REACT_APP_APPLICATION_ID}/models/:modelId?`}\n              component={Cfroides}\n            />\n            <Redirect\n              from=\"/\"\n              to={`/applications/ID${REACT_APP_APPLICATION_ID}`}\n              component={Cfroides}\n            />\n          </Switch>\n        </AppContainerElem>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"names":["Menu","MenuNavBar","text","link","href","icon","MenuSideBarSup","MenuSideBarInf","MenuSideBarNotion","REACT_APP_LOGO","REACT_APP_COMPANY","REACT_APP_APPLICATION_NAME","REACT_APP_APPLICATION_ID","REACT_APP_PLATFORM_URL","process","App","prefersDarkMode","useMediaQuery","theme","useMemo","createTheme","GetTheme","useEffect","async","userInfo","localStorage","getItem","console","log","newUser","JSON","parse","init","_jsxs","ThemeProvider","children","Helmet","_jsx","concat","rel","type","sizes","BrowserRouter","history","AppContainerElem","title","ListItem","ListItemAvatar","Avatar","alt","src","LogoApp","style","borderRadius","ListItemText","primary","menu","Switch","Route","exact","path","component","Cfroides","Redirect","from","to"],"sourceRoot":""}